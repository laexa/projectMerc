/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package moon.projectx.UI;

import javax.swing.JOptionPane;
import moon.projectx.driver.ConnectionDataBase;
import moon.projectx.driver.RequestDataBase;
import moon.projectx.objectTable.Merch;
import moon.projectx.objectTable.Statistics;
import org.apache.commons.lang3.math.NumberUtils;
import moon.projectx.UI.TableModel.CustomerTableModel;
import moon.projectx.SettingAndUser;

public class SaleFormUI extends javax.swing.JFrame {
    
    ConnectionDataBase connectionDataBase = new ConnectionDataBase();
    RequestDataBase requestDataBase;
    Merch merch = new Merch();
    Statistics statistics = new Statistics();
    CustomerTableModel customerTableModel;
   
    public SaleFormUI(Integer id) {
        
        initComponents();
        
        connectionDataBase.connect();
        requestDataBase = new RequestDataBase(connectionDataBase.getConnection());
        
        Merch merch = new Merch();
        merch = requestDataBase.getMerch(id);
        this.merch = merch;
        
        nameLabel.setText(merch.getName());
        descTextArea.setText(merch.getDesc());
        
        merch.setCategory(requestDataBase.getCategoryFromId(merch.getId()));
        categoryLabel.setText(merch.getCategory());
        
        priceLabel.setText(String.valueOf(merch.getPrice()));
        countLabel.setText(String.valueOf(merch.getCount()));
        percentLabel.setText(String.valueOf(merch.getPercent()));
        
        customerTableModel = new CustomerTableModel();
        table.setModel(customerTableModel);
        customerTableModel.refreshData(requestDataBase.getAllCustomer());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descTextArea = new javax.swing.JTextArea();
        categoryLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        percentLabel = new javax.swing.JLabel();
        countTextField = new javax.swing.JTextField();
        saleButton = new javax.swing.JButton();
        countLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel.setText("jLabel1");

        descTextArea.setEditable(false);
        descTextArea.setColumns(20);
        descTextArea.setRows(5);
        jScrollPane1.setViewportView(descTextArea);

        categoryLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        categoryLabel.setText("jLabel2");

        priceLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel.setText("jLabel3");

        percentLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        percentLabel.setText("jLabel4");

        countTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        saleButton.setText("Продати");
        saleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saleButtonActionPerformed(evt);
            }
        });

        countLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        countLabel.setText("jLabel1");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(table);

        jLabel1.setText("Імя товара");

        jLabel2.setText("Категорія");

        jLabel3.setText("Ціна (1 шт.)");

        jLabel4.setText("Знижка на товар");

        jLabel5.setText("Кількість товару ");

        jCheckBox1.setText("Сформувати накладну");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(saleButton)
                        .addGap(75, 75, 75)
                        .addComponent(jCheckBox1))
                    .addComponent(countTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3))
                                    .addGap(0, 0, Short.MAX_VALUE)))
                            .addGap(12, 12, 12)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(countLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                                .addComponent(percentLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(priceLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(categoryLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(17, 17, 17))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameLabel)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(categoryLabel)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(priceLabel)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(percentLabel)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(countLabel)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addComponent(countTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saleButton)
                            .addComponent(jCheckBox1)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saleButtonActionPerformed
        if(!countTextField.getText().equals("")){
            
            if(NumberUtils.isNumber(countTextField.getText())){
                
                int intTmp = Integer.valueOf(countLabel.getText());
                
                if(intTmp > Integer.valueOf(countTextField.getText())){
                    
                    Object o = new Object();
                    String s = new String();
                    
                    if(table.getSelectedRow() == -1){
                        JOptionPane.showMessageDialog(null, "Виберіть покупця");
                    }else{
                        
                        if(percentLabel.getText().equals(0)){
                            
                            o = table.getModel().getValueAt(table.getSelectedRow(), 4);
                            String s1 = o.toString();
                            
                            double pUser = Double.valueOf(String.valueOf(requestDataBase.getPercentFromDiscountCardID(Integer.valueOf(s1))));
                            

                            pUser  = (100 - pUser)/100;
                            

                            double result = Double.valueOf(merch.getPrice()) * Double.valueOf(countTextField.getText());
                            result = result * pUser;
                            System.out.println(result);
                            
                            
                            int countUpdate = Integer.valueOf(countLabel.getText()) - Integer.valueOf(countTextField.getText());
                            
                            requestDataBase.updateMerchCount(merch.getId(), countUpdate);
                            
                            int i = (int)result;
                            
                            Object tmpObject = table.getModel().getValueAt(table.getSelectedRow(), 0);
                            
                            Statistics stat = new Statistics();
                            
                            stat.setName(nameLabel.getText());
                            stat.setCategoryId(merch.getCategoryId());
                            stat.setPrice(i);
                            stat.setCount(Integer.valueOf(countTextField.getText()));
                            stat.setUserId(SettingAndUser.User.userId);
                            stat.setCustomerId(Integer.valueOf(tmpObject.toString()));
                            stat.setMerchId(merch.getId());
                            requestDataBase.addStat(stat);
                            
                            
                            JOptionPane.showMessageDialog(null, "Покупка зробленa. Вартість становить "+ i +"");
                        }else{
                            
                            o = table.getModel().getValueAt(table.getSelectedRow(), 4);
                            double pUser = Double.valueOf(String.valueOf(requestDataBase.getPercentFromDiscountCardID(9)));
                            double pMerch = Double.valueOf(merch.getPercent());

                            pUser  = (100 - pUser)/100;
                            pMerch = (100 - pMerch)/100;

                            double result = Double.valueOf(merch.getPrice()) * Double.valueOf(countTextField.getText());
                            result = result * pMerch * pUser;
                            System.out.println(result);
                            
                            int countUpdate = Integer.valueOf(countLabel.getText()) - Integer.valueOf(countTextField.getText());

                            requestDataBase.updateMerchCount(merch.getId(), countUpdate);
                            
                            int i = (int)result;
                            
                            Object tmpObject = table.getModel().getValueAt(table.getSelectedRow(), 0);
                            
                            Statistics stat = new Statistics();
                            
                            stat.setName(nameLabel.getText());
                            stat.setCategoryId(merch.getCategoryId());
                            stat.setPrice(i);
                            stat.setCount(Integer.valueOf(countTextField.getText()));
                            stat.setUserId(SettingAndUser.User.userId);
                            stat.setCustomerId(Integer.valueOf(tmpObject.toString()));
                            stat.setMerchId(merch.getId());
                            requestDataBase.addStat(stat);
                            
                            JOptionPane.showMessageDialog(null, "Покупка зробленa. Вартість становить "+ i +"");
                        }
                    }
                    
                }else JOptionPane.showMessageDialog(null, "Направильна кількість");
                
            }else JOptionPane.showMessageDialog(null, "Лише цілі числа");
        }else JOptionPane.showMessageDialog(null, "Ведіть кілікість");
    }//GEN-LAST:event_saleButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JLabel countLabel;
    private javax.swing.JTextField countTextField;
    private javax.swing.JTextArea descTextArea;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel percentLabel;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JButton saleButton;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
